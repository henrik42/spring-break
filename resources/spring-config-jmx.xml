<?xml version="1.0" encoding="ISO-8859-1"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
			   http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

  <import resource="spring-config-factories.xml" />

  <bean id="exporter" class="org.springframework.jmx.export.MBeanExporter">

    <property name="namingStrategy">
      <bean parent="clojure_fact">
	<constructor-arg value='
        (proxy [org.springframework.jmx.export.naming.ObjectNamingStrategy][]
	  (getObjectName [bean-obj bean-key]
	    (javax.management.ObjectName. 
	      (format "clojure-beans:name=%s" bean-key))))
        ' />
      </bean>
    </property>

    <property name="assembler">
      <bean parent="clojure_fact">
	<constructor-arg value='
        (require (symbol "spring-break.jmx"))
	(spring-break.jmx/mbean-info-assembler 
	  #(boolean (re-matches #"clj_.*" %)))
        ' />
      </bean>
    </property>
  </bean>

  <bean name="clj_states" parent="clojure_fact">
    <constructor-arg value="
    (require 'spring-break.jmx)
    (spring-break.jmx/make-mbean 
      :my_mbean #_ description
      (atom 42 
        :validator number? 
	:meta {:attr-name (name :an_atom) 
	       :attr-description (name :an_atom_description) })
      (spring-break.jmx/get-a-var)
      (ref (str 'ref)
        :validator string? 
	:meta {:attr-name (name :a_ref) 
	       :attr-description (name :a_ref_description) }))
    " />
  </bean>

  <bean id="clj_echo" parent="clojure_fact">
    <constructor-arg value="
    (require 'spring-break.jmx)
    (spring-break.jmx/fn-wrapper-of ^{:info :echo} (fn [a] a))
    " />
  </bean>

  <bean id="clj_eval" parent="clojure_fact">
    <!-- See comments at spring-break.jmx/make-value-from-input -->
    <constructor-arg value="
    (require 'spring-break.jmx)
    (spring-break.jmx/fn-wrapper-of ^{:info :eval} (fn [a] (eval a)))
    " />
  </bean>

</beans>